# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-10-20 14:50
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minute', models.PositiveIntegerField(default=0)),
                ('name', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='Img',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=b'')),
                ('date', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now=True)),
                ('first_goals', models.PositiveIntegerField(default=0)),
                ('second_goals', models.PositiveIntegerField(default=0)),
                ('tour', models.PositiveIntegerField(default=0)),
                ('done', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login', models.CharField(db_index=True, max_length=40)),
                ('first_name', models.CharField(blank=True, max_length=40)),
                ('last_name', models.CharField(blank=True, max_length=40)),
                ('date_of_reg', models.DateField(auto_now=True)),
                ('position', models.IntegerField(choices=[(0, b'Goalkeeper'), (1, b'Central base'), (2, b'Left base'), (3, b'Right base'), (4, b'Defending midfielder'), (5, b'Central midfielder'), (6, b'Left midfielder'), (7, b'Right midfielder'), (8, b'Atacking midfielder'), (9, b'Striker'), (10, b'Left forward'), (11, b'Right forward')])),
                ('platform', models.CharField(choices=[(b'PS3', b'PlayStation 3'), (b'PS4', b'PlayStation 4'), (b'XB', b'Xbox 360'), (b'PC', b'PC'), (b'Real', b'Real')], max_length=4)),
            ],
        ),
        migrations.CreateModel(
            name='Player_item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goals', models.PositiveIntegerField(default=0)),
                ('assists', models.PositiveIntegerField(default=0)),
                ('shots', models.PositiveIntegerField(default=0)),
                ('shots_on_target', models.PositiveIntegerField(default=0)),
                ('passes_try', models.PositiveIntegerField(default=0)),
                ('passes', models.PositiveIntegerField(default=0)),
                ('tackles', models.PositiveIntegerField(default=0)),
                ('tackles_won', models.PositiveIntegerField(default=0)),
                ('interceptions', models.PositiveIntegerField(default=0)),
                ('saves', models.PositiveIntegerField(default=0)),
                ('drib_try', models.PositiveIntegerField(default=0)),
                ('drib', models.PositiveIntegerField(default=0)),
                ('bend_try', models.PositiveIntegerField(default=0)),
                ('bend', models.PositiveIntegerField(default=0)),
                ('TTD', models.PositiveIntegerField(default=0)),
                ('TTD_suc', models.PositiveIntegerField(default=0)),
                ('own_goal', models.PositiveIntegerField(default=0)),
                ('yellow', models.PositiveIntegerField(default=0)),
                ('red', models.PositiveIntegerField(default=0)),
                ('rating', models.CharField(blank=True, db_index=True, max_length=5, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')])),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='first.Player')),
            ],
        ),
        migrations.CreateModel(
            name='Table_item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.PositiveIntegerField(default=0)),
                ('goal_scored', models.PositiveIntegerField(default=0)),
                ('goal_missed', models.PositiveIntegerField(default=0)),
                ('place', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=40)),
                ('Date_of_creation', models.DateField(auto_now=True)),
                ('cap', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='first.Player')),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=40)),
                ('first_place_rew', models.PositiveIntegerField(default=0)),
                ('second_place_rew', models.PositiveIntegerField(default=0)),
                ('third_place_rew', models.PositiveIntegerField(default=0)),
                ('stik_up', models.PositiveIntegerField(default=0)),
                ('stik_down', models.PositiveIntegerField(default=0)),
                ('max_match', models.PositiveIntegerField()),
                ('done', models.BooleanField(default=False)),
                ('player', models.ManyToManyField(through='first.Player_item', to='first.Player')),
            ],
        ),
        migrations.CreateModel(
            name='TTD_player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goals', models.PositiveIntegerField(default=0)),
                ('assists', models.PositiveIntegerField(default=0)),
                ('shots', models.PositiveIntegerField(default=0)),
                ('shots_on_target', models.PositiveIntegerField(default=0)),
                ('passes_try', models.PositiveIntegerField(default=0)),
                ('passes', models.PositiveIntegerField(default=0)),
                ('tackles', models.PositiveIntegerField(default=0)),
                ('tackles_won', models.PositiveIntegerField(default=0)),
                ('interceptions', models.PositiveIntegerField(default=0)),
                ('saves', models.PositiveIntegerField(default=0)),
                ('drib_try', models.PositiveIntegerField(default=0)),
                ('drib', models.PositiveIntegerField(default=0)),
                ('bend_try', models.PositiveIntegerField(default=0)),
                ('bend', models.PositiveIntegerField(default=0)),
                ('TTD', models.PositiveIntegerField(default=0)),
                ('TTD_suc', models.PositiveIntegerField(default=0)),
                ('position', models.IntegerField(choices=[(0, b'Goalkeeper'), (1, b'Central base'), (2, b'Left base'), (3, b'Right base'), (4, b'Defending midfielder'), (5, b'Central midfielder'), (6, b'Left midfielder'), (7, b'Right midfielder'), (8, b'Atacking midfielder'), (9, b'Striker'), (10, b'Left forward'), (11, b'Right forward')])),
                ('own_goal', models.PositiveIntegerField(default=0)),
                ('yellow', models.PositiveIntegerField(default=0)),
                ('red', models.PositiveIntegerField(default=0)),
                ('rating', models.CharField(blank=True, max_length=5, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')])),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='first.Match')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='first.Player')),
            ],
        ),
        migrations.AddField(
            model_name='team',
            name='tournam',
            field=models.ManyToManyField(through='first.Table_item', to='first.Tournament'),
        ),
        migrations.AddField(
            model_name='table_item',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='first.Team'),
        ),
        migrations.AddField(
            model_name='table_item',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='first.Tournament'),
        ),
        migrations.AddField(
            model_name='player_item',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='first.Tournament'),
        ),
        migrations.AddField(
            model_name='match',
            name='first_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='first.Team'),
        ),
        migrations.AddField(
            model_name='match',
            name='players',
            field=models.ManyToManyField(through='first.TTD_player', to='first.Player'),
        ),
        migrations.AddField(
            model_name='match',
            name='second_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sec', to='first.Team'),
        ),
        migrations.AddField(
            model_name='match',
            name='tourn',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='first.Tournament'),
        ),
        migrations.AddField(
            model_name='img',
            name='match',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='first.Match'),
        ),
        migrations.AddField(
            model_name='event',
            name='match',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='first.Match'),
        ),
        migrations.AlterIndexTogether(
            name='player_item',
            index_together=set([('TTD_suc', 'rating'), ('interceptions', 'rating'), ('drib', 'rating'), ('drib_try', 'rating'), ('goals', 'rating'), ('bend', 'rating'), ('passes_try', 'rating'), ('red', 'rating'), ('own_goal', 'rating'), ('TTD', 'rating'), ('yellow', 'rating'), ('saves', 'rating'), ('bend_try', 'rating'), ('shots_on_target', 'rating'), ('shots', 'rating'), ('assists', 'rating'), ('passes', 'rating'), ('tackles_won', 'rating')]),
        ),
    ]
